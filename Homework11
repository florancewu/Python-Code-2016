'''

Florance Wu
CS 1114
fw678

It transfers a part of the data from the original file into a new file. Then, it converts
the temperatures and distance from fahrenheits to celsius and inches to centimenters.
The new data is transferred onto another file.
In part D, I created a new question that is answered through the file.
I ran out of time, so I skipped part C.
'''


# Part A
def clean_data(complete_weather_filename, cleaned_weather_filename):
    file=open(complete_weather_filename,'r+')
    new_file=open(cleaned_weather_filename,'w')
    a='0'
    count = 1
    for i in file:
        count += 1
        if count % 2 == 0:
            i=i.strip()
            i=i.split(',')
            data=[]        
            data.append(i[0])
            data.append(i[1])
            data.append(i[2])
            data.append(i[3])
            if (i[8].isalpha()==True and i[8]!='Precipitation'):
                data.append(a)
            else:
                data.append(i[8])
            new_file.write(data[0]+','+data[1]+','+data[2]+','+ data[3] +','+data[4]+'\n')
    new_file.close()
    file.close()
        


### Part B
def f_to_c(f_temperature):
    c_temperature=(float(f_temperature)-32)*(5/9)
    return(c_temperature)

def in_to_cm(inches):
    centimeters= inches*2.54
    return centimeters

def convert_data_to_metric(imperial_weather_filename, metric_weather_filename):
    file=open(imperial_weather_filename,'r')
    new_file=open(metric_weather_filename,'w')
    count=0
    for i in file:
        i=i.strip()
        i=i.split(',')
        count+=1
        if count==0:
            data=i[0]+','+i[1]+','+i[2]+','+i[3]+','+i[4]
            new_file.write(data+'\n')
        else:
            data=i[0]+','+i[1]+','+str(f_to_c(float(i[2])))+','+str(f_to_c(float(i[3])))+\
                  ','+str(in_to_cm(float(i[4])))
            new_file.write(data+'\n')
    
        


##
### Part C
##def print_averages_per_month(city, weather_filename, unit_type):
##    # prints average highs and lows in each month for the given city
##
##
Part D
Write your question (as a comment), and implement a function to answer it
#How many days is the precipitation greater than 0?
def days_of_precipitation(weather_file):
    file=open(weather_file,'r')
    count=0
    days=0
    for i in file:
        count+=1
        if count!=0:
            if i[4]>0:
                days+=1
    print("There are",days,'where the precipitation is greater than 0.')


def main():
    print ("Running Part A")
    clean_data("weather.csv", "weather in imperial.csv")
    
    print ("Running Part B")
    convert_data_to_metric("weather in imperial.csv", "weather in metric.csv")

##    print ("Running Part C")
##    print_average_temps_per_month("San Francisco", "weather in imperial.csv", "imperial")
##    print_average_temps_per_month("New York", "weather in metric.csv", "metric")
##    print_average_temps_per_month("San Jose", "weather in imperial.csv", "imperial")
##
    print ("Running Part D")
    days_ofprecipitation(cleaned_weather_filename)
    
    
main()

